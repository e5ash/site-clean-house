/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$arrow-blue-name: 'arrow-blue'
$arrow-blue-x: 38px
$arrow-blue-y: 55px
$arrow-blue-offset-x: -38px
$arrow-blue-offset-y: -55px
$arrow-blue-width: 8px
$arrow-blue-height: 13px
$arrow-blue-total-width: 80px
$arrow-blue-total-height: 78px
$arrow-blue-image: '../img/sprite.png'
$arrow-blue: (38px, 55px, -38px, -55px, 8px, 13px, 80px, 78px, '../img/sprite.png', 'arrow-blue', )
$arrow-white-name: 'arrow-white'
$arrow-white-x: 46px
$arrow-white-y: 55px
$arrow-white-offset-x: -46px
$arrow-white-offset-y: -55px
$arrow-white-width: 8px
$arrow-white-height: 13px
$arrow-white-total-width: 80px
$arrow-white-total-height: 78px
$arrow-white-image: '../img/sprite.png'
$arrow-white: (46px, 55px, -46px, -55px, 8px, 13px, 80px, 78px, '../img/sprite.png', 'arrow-white', )
$calculator-name: 'calculator'
$calculator-x: 0px
$calculator-y: 55px
$calculator-offset-x: 0px
$calculator-offset-y: -55px
$calculator-width: 18px
$calculator-height: 23px
$calculator-total-width: 80px
$calculator-total-height: 78px
$calculator-image: '../img/sprite.png'
$calculator: (0px, 55px, 0px, -55px, 18px, 23px, 80px, 78px, '../img/sprite.png', 'calculator', )
$clients-arrow-next-name: 'clients-arrow-next'
$clients-arrow-next-x: 0px
$clients-arrow-next-y: 0px
$clients-arrow-next-offset-x: 0px
$clients-arrow-next-offset-y: 0px
$clients-arrow-next-width: 30px
$clients-arrow-next-height: 55px
$clients-arrow-next-total-width: 80px
$clients-arrow-next-total-height: 78px
$clients-arrow-next-image: '../img/sprite.png'
$clients-arrow-next: (0px, 0px, 0px, 0px, 30px, 55px, 80px, 78px, '../img/sprite.png', 'clients-arrow-next', )
$clients-arrow-prev-name: 'clients-arrow-prev'
$clients-arrow-prev-x: 30px
$clients-arrow-prev-y: 0px
$clients-arrow-prev-offset-x: -30px
$clients-arrow-prev-offset-y: 0px
$clients-arrow-prev-width: 30px
$clients-arrow-prev-height: 55px
$clients-arrow-prev-total-width: 80px
$clients-arrow-prev-total-height: 78px
$clients-arrow-prev-image: '../img/sprite.png'
$clients-arrow-prev: (30px, 0px, -30px, 0px, 30px, 55px, 80px, 78px, '../img/sprite.png', 'clients-arrow-prev', )
$phone-big-blue-name: 'phone-big-blue'
$phone-big-blue-x: 60px
$phone-big-blue-y: 0px
$phone-big-blue-offset-x: -60px
$phone-big-blue-offset-y: 0px
$phone-big-blue-width: 20px
$phone-big-blue-height: 21px
$phone-big-blue-total-width: 80px
$phone-big-blue-total-height: 78px
$phone-big-blue-image: '../img/sprite.png'
$phone-big-blue: (60px, 0px, -60px, 0px, 20px, 21px, 80px, 78px, '../img/sprite.png', 'phone-big-blue', )
$phone-big-green-name: 'phone-big-green'
$phone-big-green-x: 60px
$phone-big-green-y: 21px
$phone-big-green-offset-x: -60px
$phone-big-green-offset-y: -21px
$phone-big-green-width: 20px
$phone-big-green-height: 21px
$phone-big-green-total-width: 80px
$phone-big-green-total-height: 78px
$phone-big-green-image: '../img/sprite.png'
$phone-big-green: (60px, 21px, -60px, -21px, 20px, 21px, 80px, 78px, '../img/sprite.png', 'phone-big-green', )
$phone-name: 'phone'
$phone-x: 18px
$phone-y: 55px
$phone-offset-x: -18px
$phone-offset-y: -55px
$phone-width: 20px
$phone-height: 20px
$phone-total-width: 80px
$phone-total-height: 78px
$phone-image: '../img/sprite.png'
$phone: (18px, 55px, -18px, -55px, 20px, 20px, 80px, 78px, '../img/sprite.png', 'phone', )
$x-name: 'x'
$x-x: 60px
$x-y: 42px
$x-offset-x: -60px
$x-offset-y: -42px
$x-width: 11px
$x-height: 11px
$x-total-width: 80px
$x-total-height: 78px
$x-image: '../img/sprite.png'
$x: (60px, 42px, -60px, -42px, 11px, 11px, 80px, 78px, '../img/sprite.png', 'x', )
$spritesheet-width: 80px
$spritesheet-height: 78px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-blue, $arrow-white, $calculator, $clients-arrow-next, $clients-arrow-prev, $phone-big-blue, $phone-big-green, $phone, $x, )
$spritesheet: (80px, 78px, '../img/sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)

i.icon-arrow-blue
  @include sprite($arrow-blue)
i.icon-arrow-white
  @include sprite($arrow-white)
i.icon-calculator
  @include sprite($calculator)
i.icon-clients-arrow-next
  @include sprite($clients-arrow-next)
i.icon-clients-arrow-prev
  @include sprite($clients-arrow-prev)
i.icon-phone-big-blue
  @include sprite($phone-big-blue)
i.icon-phone-big-green
  @include sprite($phone-big-green)
i.icon-phone
  @include sprite($phone)
i.icon-x
  @include sprite($x)